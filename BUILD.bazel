load("@bazel-erlang//:ct.bzl", "ct_suite")
load("//:rabbitmq_home.bzl", "rabbitmq_home")
load("//:rabbitmq_run.bzl", "rabbitmq_run")
load(
    "//:rabbitmq.bzl",
    "APP_VERSION",
    "RABBITMQ_ERLC_OPTS",
    "RABBITMQ_TEST_ERLC_OPTS",
    "rabbitmq_lib",
)

APP_NAME = "rabbitmq_web_mqtt"

APP_DESCRIPTION = "RabbitMQ MQTT-over-WebSockets adapter"

APP_MODULE = "rabbit_web_mqtt_app"

APP_ENV = """[
	    {tcp_config, [{port, 15675}]},
	    {ssl_config, []},
	    {num_tcp_acceptors, 10},
	    {num_ssl_acceptors, 10},
	    {cowboy_opts, []},
	    {proxy_protocol, false}
	  ]"""

BUILD_DEPS = [
    "//deps/amqp_client:bazel_erlang_lib",
    "@ranch//:bazel_erlang_lib",
]

DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
    "@cowboy//:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//deps/rabbit:bazel_erlang_lib",
    "//deps/rabbitmq_mqtt:bazel_erlang_lib",
]

rabbitmq_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    build_deps = BUILD_DEPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

rabbitmq_home(
    name = "broker-for-tests-home",
    plugins = [
        "//deps/rabbit:bazel_erlang_lib",
        ":bazel_erlang_lib",
    ],
)

rabbitmq_run(
    name = "rabbitmq-for-tests-run",
    home = ":broker-for-tests-home",
)

ct_suite(
    name = "config_schema_SUITE",
    data = [
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_web_mqtt/rabbitmq-for-tests-run",
        "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_web_mqtt/broker-for-tests-home/sbin/rabbitmqctl",
        "RABBITMQ_PLUGINS": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_web_mqtt/broker-for-tests-home/sbin/rabbitmq-plugins",
    },
    tools = [
        ":rabbitmq-for-tests-run",
    ],
    runtime_deps = [
        "//deps/rabbitmq_cli:elixir_as_bazel_erlang_lib",
        "//deps/rabbitmq_cli:rabbitmqctl",
        "@rabbitmq_ct_client_helpers//:bazel_erlang_lib",
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
)

ct_suite(
    name = "proxy_protocol_SUITE",
    additional_hdrs = glob(["test/src/*.hrl"]),
    additional_srcs = glob(["test/src/*.erl"]),
    data = [
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS + [
        "-I deps/rabbitmq_web_mqtt/test",
    ],
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_web_mqtt/rabbitmq-for-tests-run",
        "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_web_mqtt/broker-for-tests-home/sbin/rabbitmqctl",
        "RABBITMQ_PLUGINS": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_web_mqtt/broker-for-tests-home/sbin/rabbitmq-plugins",
    },
    tools = [
        ":rabbitmq-for-tests-run",
    ],
    runtime_deps = [
        "//deps/rabbitmq_cli:elixir_as_bazel_erlang_lib",
        "//deps/rabbitmq_cli:rabbitmqctl",
        "@rabbitmq_ct_client_helpers//:bazel_erlang_lib",
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
)
