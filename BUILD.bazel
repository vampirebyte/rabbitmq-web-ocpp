load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "RABBITMQ_TEST_ERLC_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_app",
    "rabbitmq_integration_suite",
    "rabbitmq_test_helper",
)

APP_NAME = "rabbitmq_web_mqtt"

APP_DESCRIPTION = "RabbitMQ MQTT-over-WebSockets adapter"

APP_MODULE = "rabbit_web_mqtt_app"

APP_ENV = """[
	    {tcp_config, [{port, 15675}]},
	    {ssl_config, []},
	    {num_tcp_acceptors, 10},
	    {num_ssl_acceptors, 10},
	    {cowboy_opts, []},
	    {proxy_protocol, false}
	  ]"""

BUILD_DEPS = [
    "//deps/amqp_client:erlang_app",
    "@ranch//:erlang_app",
]

DEPS = [
    "//deps/rabbit_common:erlang_app",
    "@cowboy//:erlang_app",
    "//deps/rabbitmq_mqtt:erlang_app",
]

RUNTIME_DEPS = [
    "//deps/rabbit:erlang_app",
]

EXTRA_APPS = [
    "ssl",
]

rabbitmq_app(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    build_deps = BUILD_DEPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
    extra_apps = EXTRA_APPS,
)

xref()

plt(
    name = "base_plt",
    plt = "//:base_plt",
    apps = EXTRA_APPS,
    deps = BUILD_DEPS + DEPS + RUNTIME_DEPS,
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
)

broker_for_integration_suites(
    extra_plugins = [
        "//deps/rabbitmq_management:erlang_app",
    ],
)

rabbitmq_test_helper(
    name = "test_utils",
    srcs = glob(["test/src/*.erl"]),
)

rabbitmq_integration_suite(
    name = "config_schema_SUITE",
)

rabbitmq_integration_suite(
    name = "proxy_protocol_SUITE",
    additional_beam = [":test_utils"],
    erlc_opts = [
        "-I",
        "deps/rabbitmq_web_mqtt/test",
    ],
)

rabbitmq_integration_suite(
    name = "system_SUITE",
    additional_beam = [":test_utils"],
    runtime_deps = [
        "@emqtt//:erlang_app",
        "@gun//:erlang_app",
        "@cowlib//:erlang_app",
        "//deps/rabbitmq_management_agent:erlang_app",
    ],
)

assert_suites()

alias(
    name = "rabbitmq_web_mqtt",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
